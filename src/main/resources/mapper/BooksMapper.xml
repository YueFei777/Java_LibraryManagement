<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="redlib.backend.dao.BooksMapper">
  <!-- 唯一 ResultMap 定义 -->
  <resultMap id="BaseResultMap" type="redlib.backend.model.Books">
    <id column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="added_at" jdbcType="DATE" property="addedAt" />
    <result column="updated_at" jdbcType="DATE" property="updatedAt" />
    <result column="total_copies_in_stock" jdbcType="INTEGER" property="totalCopiesInStock" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="cover_url" jdbcType="VARCHAR" property="coverUrl" />
    <result column="borrowed_number" jdbcType="INTEGER" property="borrowedNumber" />
  </resultMap>

  <!-- 唯一 Base_Column_List 定义 -->
  <sql id="Base_Column_List">
    isbn, title, author, publisher, added_at, updated_at, total_copies_in_stock, updated_by, cover_url,
    borrowed_number
  </sql>

  <!-- 查询操作 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from books
    where isbn = #{isbn,jdbcType=VARCHAR}
  </select>

  <!-- 删除操作 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from books
    where isbn = #{isbn,jdbcType=VARCHAR}
  </delete>

  <!-- 插入操作 -->
  <insert id="insert" parameterType="redlib.backend.model.Books">
    insert into books (
      isbn, title, author,
      publisher, added_at, updated_at,
      total_copies_in_stock, updated_by, cover_url,
      borrowed_number
    )
    values (
             #{isbn,jdbcType=VARCHAR},
             #{title,jdbcType=VARCHAR},
             #{author,jdbcType=VARCHAR},
             #{publisher,jdbcType=VARCHAR},
             #{addedAt,jdbcType=DATE},
             #{updatedAt,jdbcType=DATE},
             #{totalCopiesInStock,jdbcType=INTEGER},
             #{updatedBy,jdbcType=VARCHAR},
             #{coverUrl,jdbcType=VARCHAR},
             #{borrowedNumber,jdbcType=INTEGER}
           )
  </insert>

  <!-- 动态插入 -->
  <insert id="insertSelective" parameterType="redlib.backend.model.Books">
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">isbn,</if>
      <if test="title != null">title,</if>
      <if test="author != null">author,</if>
      <if test="publisher != null">publisher,</if>
      <if test="addedAt != null">added_at,</if>
      <if test="updatedAt != null">updated_at,</if>
      <if test="totalCopiesInStock != null">total_copies_in_stock,</if>
      <if test="updatedBy != null">updated_by,</if>
      <if test="coverUrl != null">cover_url,</if>
      <if test="borrowedNumber != null">borrowed_number,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">#{isbn,jdbcType=VARCHAR},</if>
      <if test="title != null">#{title,jdbcType=VARCHAR},</if>
      <if test="author != null">#{author,jdbcType=VARCHAR},</if>
      <if test="publisher != null">#{publisher,jdbcType=VARCHAR},</if>
      <if test="addedAt != null">#{addedAt,jdbcType=DATE},</if>
      <if test="updatedAt != null">#{updatedAt,jdbcType=DATE},</if>
      <if test="totalCopiesInStock != null">#{totalCopiesInStock,jdbcType=INTEGER},</if>
      <if test="updatedBy != null">#{updatedBy,jdbcType=VARCHAR},</if>
      <if test="coverUrl != null">#{coverUrl,jdbcType=VARCHAR},</if>
      <if test="borrowedNumber != null">#{borrowedNumber,jdbcType=INTEGER},</if>
    </trim>
  </insert>

  <!-- 动态更新 -->
  <update id="updateByPrimaryKeySelective" parameterType="redlib.backend.model.Books">
    update books
    <set>
      <if test="title != null">title = #{title,jdbcType=VARCHAR},</if>
      <if test="author != null">author = #{author,jdbcType=VARCHAR},</if>
      <if test="publisher != null">publisher = #{publisher,jdbcType=VARCHAR},</if>
      <if test="addedAt != null">added_at = #{addedAt,jdbcType=DATE},</if>
      <if test="updatedAt != null">updated_at = #{updatedAt,jdbcType=DATE},</if>
      <if test="totalCopiesInStock != null">total_copies_in_stock = #{totalCopiesInStock,jdbcType=INTEGER},</if>
      <if test="updatedBy != null">updated_by = #{updatedBy,jdbcType=VARCHAR},</if>
      <if test="coverUrl != null">cover_url = #{coverUrl,jdbcType=VARCHAR},</if>
      <if test="borrowedNumber != null">borrowed_number = #{borrowedNumber,jdbcType=INTEGER},</if>
    </set>
    where isbn = #{isbn,jdbcType=VARCHAR}
  </update>

  <!-- 全字段更新 -->
  <update id="updateByPrimaryKey" parameterType="redlib.backend.model.Books">
    update books
    set
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      added_at = #{addedAt,jdbcType=DATE},
      updated_at = #{updatedAt,jdbcType=DATE},
      total_copies_in_stock = #{totalCopiesInStock,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      borrowed_number = #{borrowedNumber,jdbcType=INTEGER}
    where isbn = #{isbn,jdbcType=VARCHAR}
  </update>

  <!-- 分页查询 -->
  <select id="list" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM books
    ORDER BY added_at DESC <!-- 按添加时间倒序 -->
    LIMIT #{size} OFFSET #{offset}
  </select>

  <!-- 动态条件搜索 -->
  <select id="searchBooks" resultMap="BaseResultMap">
    SELECT * FROM books
    <where>
      <if test="params.title != null">
        title LIKE CONCAT('%', #{params.title}, '%')
      </if>
      <if test="params.author != null">
        AND author LIKE CONCAT('%', #{params.author}, '%')
      </if>
      <if test="params.publisher != null">
        AND publisher LIKE CONCAT('%', #{params.publisher}, '%')
      </if>
    </where>
  </select>

  <select id="checkCopies" resultType="int">
    SELECT total_copies_in_stock FROM books
        WHERE isbn = #{isbn,jdbcType=VARCHAR}
  </select>

  <update id="updateCopies">
    UPDATE books
        SET total_copies_in_stock = #{total_copies_in_stock}
    WHERE isbn = #{isbn,jdbcType=VARCHAR}
  </update>

  <select id="checkBorrowedNumber" resultType="int">
    SELECT borrowed_number FROM books
    WHERE isbn = #{isbn,jdbcType=VARCHAR}
  </select>

  <update id="updateBorrowedNumber">
    UPDATE books
    SET total_copies_in_stock = total_copies_in_stock + 1
    WHERE isbn = #{isbn,jdbcType=VARCHAR}
  </update>

</mapper>