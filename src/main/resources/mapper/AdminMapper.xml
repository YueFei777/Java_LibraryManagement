<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="redlib.backend.dao.ManageMapper">

    <!-- 结果映射 -->
    <resultMap id="SupervisorDTOMap" type="redlib.backend.dto.SupervisorDTO">
        <id column="supervisor_id" property="supervisorId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>

        <!-- 权限明细集合 -->
        <collection property="privileges" ofType="redlib.backend.model.PrivilegeDetail">
            <result column="mod_id" property="modId"/>
            <result column="priv" property="priv"/>
            <result column="suspended" property="suspended"
                    typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        </collection>
    </resultMap>

    <resultMap id="SupervisorVOMap" type="redlib.backend.vo.SupervisorVO">
        <id column="supervisor_id" property="supervisorId"/>
        <result column="username" property="username"/>
        <result column="created_at" property="createdAt"/>

        <collection property="privileges" ofType="redlib.backend.model.PrivilegeDetail">
            <result column="mod_id" property="modId"/>
            <result column="priv" property="priv"/>
            <result column="suspended" property="suspended"
                    typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        </collection>
    </resultMap>

    <resultMap id="readerResultMap" type="redlib.backend.model.Readers">
        <id property="readerId" column="reader_id"/>
        <result property="username" column="username"/>
        <result property="studentId" column="student_id"/>
        <result property="contact" column="contact"/>
        <result property="createdAt" column="created_at"/>
        <result property="password" column="password"/>
    </resultMap>

    <resultMap id="ReaderDTOMap" type="redlib.backend.dto.ReaderDTO">
        <id column="reader_id" property="readerId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="student_id" property="studentId" jdbcType="VARCHAR"/>

        <!-- 权限明细集合 -->
        <collection property="recordings" ofType="redlib.backend.vo.RecordingsVO">
            <result column="isbn" property="isbn"/>
            <result column="borrowed_time" property="borrowedTime"/>
            <result column="returned_time" property="returnedTime"/>
        </collection>
    </resultMap>

    <resultMap id="ReaderVOMap" type="redlib.backend.vo.ReaderVO">
        <id column="reader_id" property="readerId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="student_id" property="studentId" jdbcType="VARCHAR"/>

        <!-- 权限明细集合 -->
        <collection property="recordings" ofType="redlib.backend.vo.RecordingsVO">
            <result column="isbn" property="isbn"/>
            <result column="borrowed_time" property="borrowedTime"/>
            <result column="returned_time" property="returnedTime"/>
        </collection>
    </resultMap>

    <delete id="deleteSupervisorPriv">
        DELETE
            FROM user_privileges
        WHERE user_type = 'supervisor' AND user_id IN(
            SELECT supervisor_id
            FROM supervisors
            WHERE username = #{username}
            )
    </delete>

    <delete id="deleteSupervisor">
        DELETE FROM supervisors
        WHERE username = #{username}
    </delete>

    <select id="listSupervisors" resultMap="SupervisorVOMap">
        SELECT
            s.supervisor_id,
            s.username,
            s.created_at,
            up.mod_id,
            up.priv,
            up.suspended
        FROM supervisors s
                 LEFT JOIN user_privileges up
                           ON up.user_id = s.supervisor_id
                               AND up.user_type = 'supervisor'
                                AND up.suspended IS NOT NULL
        ORDER BY s.supervisor_id
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="selectByUsername" resultMap="SupervisorDTOMap">
        SELECT
            s.supervisor_id,
            s.username,
            s.password,
            s.created_at,
            up.mod_id,
            up.priv,
            up.suspended
        FROM supervisors s
                 LEFT JOIN user_privileges up
                           ON up.user_id = s.supervisor_id
                               AND up.user_type = 'supervisor'
        WHERE s.username = #{username}
    </select>

    <insert id="insertSupervisor">
        INSERT INTO supervisors (username, password, created_at)
            VALUES (#{username}, #{encrypted_password}, NOW())
    </insert>

    <update id="updateSupervisorNameAndPassword">
        UPDATE supervisors
        SET
            username = #{newUsername},
            password = #{newPassword}
        WHERE
            username = #{oldUsername}
            AND password = #{oldPassword}
    </update>

    <select id="countSupervisors" resultType="int">
        SELECT COUNT(*) FROM supervisors
    </select>

    <!-- ********************************************************************************************************* -->

    <insert id="insertReader">
        INSERT INTO readers (username, student_id, contact, password)
        VALUES (#{username}, #{studentId}, #{contact}, #{password})
    </insert>

    <delete id="deleteReaderPriv">
        DELETE
        FROM user_privileges
        WHERE user_type = 'reader' AND user_id IN(
            SELECT reader_id
            FROM readers
            WHERE username = #{username}
        )
    </delete>

    <delete id="deleteReader">
        DELETE FROM readers
        WHERE username = #{username}
    </delete>

    <update id="updateReaderNameAndPassword">
        UPDATE readers
        SET
            username = #{newUsername},
            password = #{newPassword}
        WHERE
            username = #{oldUsername}
          AND password = #{oldPassword}
    </update>

    <select id="countReaders" resultType="int">
        SELECT COUNT(*) FROM readers
    </select>

    <select id="selectByReaderName" resultMap="ReaderDTOMap">
        SELECT
            r.reader_id,
            r.username,
            r.password,
            r.student_id,
            r.created_at,
            rc.isbn,
            rc.borrowed_time,
            rc.returned_time
        FROM readers r
                 LEFT JOIN recordings rc
                           ON rc.reader_id = r.reader_id
        WHERE r.username = #{username} AND r.student_id = #{studentId}
    </select>

    <select id="listReaders" resultMap="ReaderVOMap">
        SELECT
            r.reader_id,
            r.username,
            r.created_at,
            r.student_id,
            rc.isbn,
            rc.borrowed_time,
            rc.returned_time
        FROM readers r
                 LEFT JOIN recordings rc
                           ON rc.reader_id = r.reader_id
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="selectReaderIdByStudentId">
        SELECT reader_id
        FROM readers
            WHERE student_id = #{studentId}
    </select>

</mapper>